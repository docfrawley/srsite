{"ast":null,"code":"import { ref } from 'vue';\nimport { db } from '../firebase/config';\nimport { collection, onSnapshot, query, where } from 'firebase/firestore';\n\nconst getOrderDocs = (c, mod, ord) => {\n  const document = ref(null);\n  const error = ref(null);\n  const thevid = ref(); // register the firestore collection reference\n\n  let colRef = collection(db, c);\n  colRef = query(colRef, where(\"module\", \"==\", mod), where(\"order\", \"==\", ord));\n  const unsub = onSnapshot(colRef, snap => {\n    let results = [];\n    snap.docs.forEach(doc => {\n      // must wait for the server to create the timestamp & send it back\n      results.push({ ...doc.data(),\n        id: doc.id\n      });\n    }); // update values\n\n    document.value = results[0];\n    thevid.value = document.value.iframe;\n    error.value = null;\n  }, err => {\n    console.log(err.message);\n    document.value = null;\n    error.value = 'could not fetch the data';\n  });\n  return thevid;\n};\n\nexport default getOrderDocs;","map":{"version":3,"names":["ref","db","collection","onSnapshot","query","where","getOrderDocs","c","mod","ord","document","error","thevid","colRef","unsub","snap","results","docs","forEach","doc","push","data","id","value","iframe","err","console","log","message"],"sources":["/Users/docfrawley/Sites/NVoge/srsite/src/composables/getLesson.js"],"sourcesContent":["import { ref } from 'vue'\nimport { db } from '../firebase/config'\nimport { collection, onSnapshot, query, where } from 'firebase/firestore'\n\nconst getOrderDocs = (c, mod, ord) => {\n  \n  const document= ref(null)\n  const error = ref(null)\n  const thevid = ref()\n\n  // register the firestore collection reference\n  let colRef = collection(db, c)\n  colRef = query(colRef, where(\"module\", \"==\", mod), where(\"order\", \"==\", ord))\n    \n  const unsub = onSnapshot(colRef, snap => {\n    let results = []\n    snap.docs.forEach(doc => {\n      // must wait for the server to create the timestamp & send it back\n      results.push({...doc.data(), id: doc.id})\n    });\n    \n    // update values\n   \n\n    document.value = results[0]\n    thevid.value = document.value.iframe\n    \n    error.value = null\n  }, err => {\n    console.log(err.message)\n    document.value = null\n    error.value = 'could not fetch the data'\n  })\n  \n  return thevid\n}\n\nexport default getOrderDocs"],"mappings":"AAAA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,KAAxC,QAAqD,oBAArD;;AAEA,MAAMC,YAAY,GAAG,CAACC,CAAD,EAAIC,GAAJ,EAASC,GAAT,KAAiB;EAEpC,MAAMC,QAAQ,GAAEV,GAAG,CAAC,IAAD,CAAnB;EACA,MAAMW,KAAK,GAAGX,GAAG,CAAC,IAAD,CAAjB;EACA,MAAMY,MAAM,GAAGZ,GAAG,EAAlB,CAJoC,CAMpC;;EACA,IAAIa,MAAM,GAAGX,UAAU,CAACD,EAAD,EAAKM,CAAL,CAAvB;EACAM,MAAM,GAAGT,KAAK,CAACS,MAAD,EAASR,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBG,GAAjB,CAAd,EAAqCH,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgBI,GAAhB,CAA1C,CAAd;EAEA,MAAMK,KAAK,GAAGX,UAAU,CAACU,MAAD,EAASE,IAAI,IAAI;IACvC,IAAIC,OAAO,GAAG,EAAd;IACAD,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkBC,GAAG,IAAI;MACvB;MACAH,OAAO,CAACI,IAAR,CAAa,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;QAAgBC,EAAE,EAAEH,GAAG,CAACG;MAAxB,CAAb;IACD,CAHD,EAFuC,CAOvC;;IAGAZ,QAAQ,CAACa,KAAT,GAAiBP,OAAO,CAAC,CAAD,CAAxB;IACAJ,MAAM,CAACW,KAAP,GAAeb,QAAQ,CAACa,KAAT,CAAeC,MAA9B;IAEAb,KAAK,CAACY,KAAN,GAAc,IAAd;EACD,CAduB,EAcrBE,GAAG,IAAI;IACRC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;IACAlB,QAAQ,CAACa,KAAT,GAAiB,IAAjB;IACAZ,KAAK,CAACY,KAAN,GAAc,0BAAd;EACD,CAlBuB,CAAxB;EAoBA,OAAOX,MAAP;AACD,CA/BD;;AAiCA,eAAeN,YAAf"},"metadata":{},"sourceType":"module"}