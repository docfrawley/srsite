{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createTextVNode(\" This is the video admin area First pick which course to edit: \");\n\nvar _hoisted_2 = [\"onClick\"];\nvar _hoisted_3 = {\n  key: 0\n};\nvar _hoisted_4 = {\n  \"class\": \"module-list\"\n};\nvar _hoisted_5 = [\"onClick\"];\n\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", null, \" ADD MODULE + \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.courses, function (course) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: course.id\n    }, [_createElementVNode(\"div\", {\n      onClick: function onClick($event) {\n        return $setup.goToCourse(course);\n      }\n    }, _toDisplayString(course.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_2)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), $setup.modules ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.modules, function (amod) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: amod.id\n    }, [_createElementVNode(\"span\", {\n      \"class\": \"ind-mod\",\n      onClick: function onClick($event) {\n        return $setup.showModule(amod.module);\n      }\n    }, _toDisplayString(amod.title), 9\n    /* TEXT, PROPS */\n    , _hoisted_5)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _hoisted_6])])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;;;;EASS,SAAM;;;;8BAITA,oBAEM,KAFN,EAEM,IAFN,EAAK,gBAAL,EAEA;AAAA;AAFA;;;4FATJC,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAFgBC,cAEhB,EAFuB,UAAjBC,MAAiB,EAAX;yBAAlBJ,oBAEM,KAFN,EAEM;MAF0BK,GAAG,EAAED,MAAM,CAACE;IAEtC,CAFN,GACIP,oBAAwD,KAAxD,EAAwD;MAAlDQ,OAAK;QAAA,OAAEJ,kBAAWC,MAAX,CAAF;MAAA;IAA6C,CAAxD,mBAAmCA,MAAM,CAACI,MAA1C,EAA+C;IAAA;IAA/C,EAA+CC,UAA/C,EADJ;GAEM,CAFN;;EAAA,IAIWN,gCAAXH,oBASM,KATN,EASMU,UATN,EASM,CARJX,oBAOM,KAPN,cAOM,oBANJC,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAFcC,cAEd,EAFqB,UAAfQ,IAAe,EAAX;yBAAhBX,oBAEM,KAFN,EAEM;MAFwBK,GAAG,EAAEM,IAAI,CAACL;IAElC,CAFN,GACIP,oBAA6E,MAA7E,EAA6E;MAAvE,SAAM,SAAiE;MAAtDQ,OAAK;QAAA,OAAEJ,kBAAWQ,IAAI,CAACC,MAAhB,CAAF;MAAA;IAAiD,CAA7E,mBAAyDD,IAAI,CAACH,MAA9D,EAAmE;IAAA;IAAnE,EAAmEK,UAAnE,EADJ;GAEM,CAFN;;EAAA,CAMI,GAHJC,UAGI,CAPN,CAQI,CATN","names":["_createElementVNode","_createElementBlock","_Fragment","_renderList","$setup","course","key","id","onClick","title","_hoisted_2","_hoisted_3","amod","module","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/Users/mattfrawley/sites/srsite/src/views/VideoAdmin.vue"],"sourcesContent":["<template>\n  This is the video admin area\n\n  First pick which course to edit:\n  <div v-for=\"course in courses\" :key=\"course.id\">\n      <div @click=\"goToCourse(course)\">{{course.title}} </div>\n  </div>\n\n  <div v-if=\"modules\">\n    <div class=\"module-list\">\n      <div v-for=\"amod in modules\" :key=\"amod.id\">\n          <span class=\"ind-mod\" @click=\"showModule(amod.module)\">{{amod.title}} </span>\n      </div>\n      <div>\n        ADD MODULE +\n      </div>\n    </div>\n  </div>\n\n  \n\n  \n</template>\n\n<script>\nimport { ref } from 'vue'\nimport getOrderDocs from '@/composables/getOrderDocs'\nimport getCollection from '@/composables/getCollection'\nimport getLesson from '@/composables/getLesson'\n\nexport default {\n setup() {\n  const modules = ref()\n  const currentCourse = ref()\n  const currentModule = ref()\n  const { error, documents: courses} = getCollection('courses')\n\n  console.log('here are the courses: ', courses)\n  const goToCourse = async (c) => {\n    const {error: err, documents:mods } = await getOrderDocs('course-modules', 'course', c)\n    currentCourse.value = c\n    modules.value = mods\n  }\n\n  const showModule = async (theMod)=>{\n            whichVid.value.iframe  = await getOrderDocs(currentCourse.value, 'modules', theMod)\n            currentModule.value = theMod\n        }\n\n\n  return { goToCourse, error, courses, modules, showModule, currentCourse, currentModule}\n }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}