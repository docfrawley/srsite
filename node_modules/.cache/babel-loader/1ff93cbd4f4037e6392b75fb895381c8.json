{"ast":null,"code":"import { ref } from 'vue';\nimport { projectFirestore } from '../firebase/config';\n\nconst getOrderDocs = (collection, keyField, fieldValue) => {\n  const documents = ref(null);\n  const error = ref(null); // register the firestore collection reference\n\n  let collectionRef = projectFirestore.collection(collection);\n  const unsub = collectionRef.onSnapshot(snap => {\n    let results = [];\n    snap.docs.forEach(doc => {\n      // must wait for the server to create the timestamp & send it back\n      results.push({ ...doc.data(),\n        id: doc.id\n      });\n    }); // update values\n\n    if (keyField === 'course') {\n      documents.value = results.filter(result => result.course === fieldValue);\n      documents.value.sort((a, b) => a.module > b.module ? 1 : -1);\n    } else {\n      documents.value = results.filter(result => result.module === fieldValue);\n      documents.value.sort((a, b) => a.order > b.order ? 1 : -1);\n    }\n\n    error.value = null;\n  }, err => {\n    console.log(err.message);\n    documents.value = null;\n    error.value = 'could not fetch the data';\n  });\n  return {\n    error,\n    documents\n  };\n};\n\nexport default getOrderDocs;","map":{"version":3,"names":["ref","projectFirestore","getOrderDocs","collection","keyField","fieldValue","documents","error","collectionRef","unsub","onSnapshot","snap","results","docs","forEach","doc","push","data","id","value","filter","result","course","sort","a","b","module","order","err","console","log","message"],"sources":["/Users/docfrawley/Sites/NVoge/srsite/src/composables/getOrderDocs.js"],"sourcesContent":["import { ref } from 'vue'\nimport { projectFirestore } from '../firebase/config'\n\nconst getOrderDocs = (collection, keyField, fieldValue) => {\n\n  const documents = ref(null)\n  const error = ref(null)\n\n  // register the firestore collection reference\n  let collectionRef = projectFirestore.collection(collection)\n\n    \n  const unsub = collectionRef.onSnapshot(snap => {\n    let results = []\n    snap.docs.forEach(doc => {\n      // must wait for the server to create the timestamp & send it back\n      results.push({...doc.data(), id: doc.id})\n    });\n    \n    // update values\n    if (keyField==='course') {\n      documents.value = results.filter(result => result.course===fieldValue)\n      documents.value.sort((a, b) => (a.module > b.module) ? 1 : -1)\n    } else {\n      documents.value = results.filter(result => result.module===fieldValue)\n      documents.value.sort((a, b) => (a.order > b.order) ? 1 : -1)\n    }\n    \n    \n    error.value = null\n  }, err => {\n    console.log(err.message)\n    documents.value = null\n    error.value = 'could not fetch the data'\n  })\n  \n  return { error, documents }\n}\n\nexport default getOrderDocs"],"mappings":"AAAA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,YAAY,GAAG,CAACC,UAAD,EAAaC,QAAb,EAAuBC,UAAvB,KAAsC;EAEzD,MAAMC,SAAS,GAAGN,GAAG,CAAC,IAAD,CAArB;EACA,MAAMO,KAAK,GAAGP,GAAG,CAAC,IAAD,CAAjB,CAHyD,CAKzD;;EACA,IAAIQ,aAAa,GAAGP,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,CAApB;EAGA,MAAMM,KAAK,GAAGD,aAAa,CAACE,UAAd,CAAyBC,IAAI,IAAI;IAC7C,IAAIC,OAAO,GAAG,EAAd;IACAD,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkBC,GAAG,IAAI;MACvB;MACAH,OAAO,CAACI,IAAR,CAAa,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;QAAgBC,EAAE,EAAEH,GAAG,CAACG;MAAxB,CAAb;IACD,CAHD,EAF6C,CAO7C;;IACA,IAAId,QAAQ,KAAG,QAAf,EAAyB;MACvBE,SAAS,CAACa,KAAV,GAAkBP,OAAO,CAACQ,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAgBjB,UAAzC,CAAlB;MACAC,SAAS,CAACa,KAAV,CAAgBI,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAA5D;IACD,CAHD,MAGO;MACLpB,SAAS,CAACa,KAAV,GAAkBP,OAAO,CAACQ,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACK,MAAP,KAAgBrB,UAAzC,CAAlB;MACAC,SAAS,CAACa,KAAV,CAAgBI,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAAb,GAAsB,CAAtB,GAA0B,CAAC,CAA1D;IACD;;IAGDpB,KAAK,CAACY,KAAN,GAAc,IAAd;EACD,CAlBa,EAkBXS,GAAG,IAAI;IACRC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;IACAzB,SAAS,CAACa,KAAV,GAAkB,IAAlB;IACAZ,KAAK,CAACY,KAAN,GAAc,0BAAd;EACD,CAtBa,CAAd;EAwBA,OAAO;IAAEZ,KAAF;IAASD;EAAT,CAAP;AACD,CAlCD;;AAoCA,eAAeJ,YAAf"},"metadata":{},"sourceType":"module"}