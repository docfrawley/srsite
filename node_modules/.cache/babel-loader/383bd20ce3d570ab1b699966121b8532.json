{"ast":null,"code":"import _regeneratorRuntime from \"/Users/docfrawley/Sites/srsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/docfrawley/Sites/srsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref } from 'vue';\nexport default {\n  components: {\n    ModuleForm: ModuleForm\n  },\n  props: ['courseInfo'],\n  setup: function setup(props) {\n    var edCourse = ref(props.courseInfo);\n\n    var _useDocument = useDocument('courses', props.courseInfo.id),\n        isPending = _useDocument.isPending,\n        error = _useDocument.error,\n        deleteTheDoc = _useDocument.deleteTheDoc,\n        updateTheDoc = _useDocument.updateTheDoc;\n\n    var wasAdded = ref(false);\n\n    var _getOrderDocs = getOrderDocs('course-modules', 'course', props.courseInfo.col_name),\n        documents = _getOrderDocs.documents;\n\n    var modToEdit = ref();\n    var componentKey = ref(0);\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return updateTheDoc(edCourse.value);\n\n              case 2:\n                updated.value = true;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var showModule = function showModule(theMod) {\n      modToEdit.value = theMod;\n      componentKey.value++;\n      console.log(\" got to here: \", modToEdit.value);\n    };\n\n    return {\n      isPending: isPending,\n      wasAdded: wasAdded,\n      edCourse: edCourse,\n      handleSubmit: handleSubmit,\n      showModule: showModule,\n      documents: documents,\n      modToEdit: modToEdit,\n      componentKey: componentKey\n    };\n  }\n};","map":{"version":3,"mappings":";;AAiCA,SAASA,GAAT,QAAoB,KAApB;AAEA,eAAe;EACXC,UAAU,EAAE;IAAEC,UAAS,EAATA;EAAF,CADD;EAEXC,KAAK,EAAE,CAAC,YAAD,CAFI;EAGXC,KAHW,iBAGLD,KAHK,EAGE;IACT,IAAME,QAAO,GAAIL,GAAG,CAACG,KAAK,CAACG,UAAP,CAApB;;IACA,mBAAyDC,WAAW,CAAC,SAAD,EAAYJ,KAAK,CAACG,UAAN,CAAiBE,EAA7B,CAApE;IAAA,IAAQC,SAAR,gBAAQA,SAAR;IAAA,IAAmBC,KAAnB,gBAAmBA,KAAnB;IAAA,IAA0BC,YAA1B,gBAA0BA,YAA1B;IAAA,IAAwCC,YAAxC,gBAAwCA,YAAxC;;IACA,IAAMC,QAAO,GAAIb,GAAG,CAAC,KAAD,CAApB;;IACA,oBAAsBc,YAAY,CAAC,gBAAD,EAAmB,QAAnB,EAA6BX,KAAK,CAACG,UAAN,CAAiBS,QAA9C,CAAlC;IAAA,IAAQC,SAAR,iBAAQA,SAAR;;IACA,IAAMC,SAAQ,GAAIjB,GAAG,EAArB;IACA,IAAMkB,YAAW,GAAIlB,GAAG,CAAC,CAAD,CAAxB;;IAEA,IAAMmB,YAAW;MAAA,sEAAI;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACXP,YAAY,CAACP,QAAQ,CAACe,KAAV,CADD;;cAAA;gBAEjBC,OAAO,CAACD,KAAR,GAAgB,IAAhB;;cAFiB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAJ;;MAAA,gBAAXD,YAAW;QAAA;MAAA;IAAA,GAAjB;;IAKA,IAAMG,UAAS,GAAI,SAAbA,UAAa,CAACC,MAAD,EAAY;MAC3BN,SAAS,CAACG,KAAV,GAAkBG,MAAlB;MACAL,YAAY,CAACE,KAAb;MACAI,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,SAAS,CAACG,KAAxC;IAEJ,CALA;;IAQA,OAAO;MAAEX,SAAS,EAATA,SAAF;MAAaI,QAAQ,EAARA,QAAb;MAAuBR,QAAQ,EAARA,QAAvB;MAAiCc,YAAY,EAAZA,YAAjC;MAA+CG,UAAU,EAAVA,UAA/C;MAA2DN,SAAS,EAATA,SAA3D;MAAsEC,SAAS,EAATA,SAAtE;MAAiFC,YAAW,EAAXA;IAAjF,CAAP;EACJ;AAzBW,CAAf","names":["ref","components","ModuleForm","props","setup","edCourse","courseInfo","useDocument","id","isPending","error","deleteTheDoc","updateTheDoc","wasAdded","getOrderDocs","col_name","documents","modToEdit","componentKey","handleSubmit","value","updated","showModule","theMod","console","log"],"sourceRoot":"","sources":["/Users/docfrawley/Sites/srsite/src/components/AddCourse.vue"],"sourcesContent":["<template>\n    this is the add course form:\n    <div v-if=\"edCourse\">\n        <form @submit.prevent=\"handleSubmit\">\n            <h4>Add/Edit Course</h4>\n            <label>Title</label><input type=\"text\" required placeholder=\"title\" v-model=\"edCourse.title\">\n            <label>Instructor</label><input type=\"text\" required placeholder=\"instructor\" v-model=\"edCourse.instructor\">\n            <label>Launch</label><input type=\"text\" required placeholder=\"launch\" v-model=\"edCourse.launch\">\n            <label>Status</label><input type=\"text\" required placeholder=\"status\" v-model=\"edCourse.status\">\n            <label>Col_Name</label><input type=\"text\" required placeholder=\"col_name\" v-model=\"edCourse.col_name\">\n            <label>Desscription</label><textarea required placeholder=\"description\"\n                v-model=\"edCourse.description\"></textarea>\n            <!-- <div class=\"error\">{{ fileError }}</div> -->\n\n            <button v-if=\"!isPending\">ADD COURSE</button>\n            <button v-else disabled>Saving...</button>\n        </form>\n        <div v-if=\"wasAdded\">course added</div>\n    </div>\n    <div v-if=\"documents\" class=\"module-container\">\n        <div v-for=\"doc in documents\" :key=\"doc.id\">\n            <div class=\"module-listing\" @click=\"showModule(doc)\">{{ doc.title }} </div>\n        </div>\n        <button>\n            ADD MODULE +\n        </button>\n    </div>\n    <div v-if=\"modToEdit\">\n        <ModuleForm :moduleInfo=\"modToEdit\" :modColName=\"edCourse.col_name\" :key=\"componentKey\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nexport default {\n    components: { ModuleForm },\n    props: ['courseInfo'],\n    setup(props) {\n        const edCourse = ref(props.courseInfo)\n        const { isPending, error, deleteTheDoc, updateTheDoc } = useDocument('courses', props.courseInfo.id)\n        const wasAdded = ref(false)\n        const { documents } = getOrderDocs('course-modules', 'course', props.courseInfo.col_name)\n        const modToEdit = ref()\n        const componentKey = ref(0)\n\n        const handleSubmit = async () => {\n            await updateTheDoc(edCourse.value)\n            updated.value = true\n        }\n\n        const showModule = (theMod) => {\n            modToEdit.value = theMod\n            componentKey.value++\n            console.log(\" got to here: \", modToEdit.value)\n\n        }\n\n\n        return { isPending, wasAdded, edCourse, handleSubmit, showModule, documents, modToEdit, componentKey }\n    }\n\n}\n</script>\n\n<style>\n.module-listing {\n    padding: 10px;\n    background-color: aquamarine;\n    cursor: pointer;\n    margin: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}