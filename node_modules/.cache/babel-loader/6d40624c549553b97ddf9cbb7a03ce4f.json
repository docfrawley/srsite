{"ast":null,"code":"import _regeneratorRuntime from \"/Users/docfrawley/Sites/srsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/docfrawley/Sites/srsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref } from 'vue';\nimport useCollection from '@/composables/useCollection';\nexport default {\n  emits: ['moduleAdded'],\n  setup: function setup(props, context) {\n    var _useCollection = useCollection('course-modules'),\n        error = _useCollection.error,\n        addTheDocument = _useCollection.addTheDocument;\n\n    var wasAdded = ref(false);\n    var isPending = ref(false);\n    var title = ref();\n    var course = ref();\n    var modnumb = ref();\n    var description = ref();\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return addTheDocument({\n                  course: course.value,\n                  title: title.value,\n                  modnumb: modnumb.value,\n                  description: description.value\n                });\n\n              case 2:\n                res = _context.sent;\n                isPending.value = false;\n\n                if (res) {\n                  context.emit('moduleAdded', {\n                    wasadded: true\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return {\n      isPending: isPending,\n      wasAdded: wasAdded,\n      handleSubmit: handleSubmit,\n      title: title,\n      course: course,\n      modnumb: modnumb,\n      description: description\n    };\n  }\n};","map":{"version":3,"mappings":";;AAiBA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,eAAe;EACXC,KAAK,EAAE,CAAC,aAAD,CADI;EAEXC,KAFW,iBAELC,KAFK,EAEEC,OAFF,EAEW;IAClB,qBAAkCJ,aAAa,CAAC,gBAAD,CAA/C;IAAA,IAAQK,KAAR,kBAAQA,KAAR;IAAA,IAAeC,cAAf,kBAAeA,cAAf;;IACA,IAAMC,QAAO,GAAIR,GAAG,CAAC,KAAD,CAApB;IACA,IAAMS,SAAQ,GAAIT,GAAG,CAAC,KAAD,CAArB;IACA,IAAMU,KAAI,GAAIV,GAAG,EAAjB;IACA,IAAMW,MAAK,GAAIX,GAAG,EAAlB;IACA,IAAMY,OAAM,GAAIZ,GAAG,EAAnB;IACA,IAAMa,WAAU,GAAIb,GAAG,EAAvB;;IAGA,IAAMc,YAAW;MAAA,sEAAI;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACCP,cAAc,CAAC;kBAC7BI,MAAM,EAAEA,MAAM,CAACI,KADc;kBAE7BL,KAAK,EAAEA,KAAK,CAACK,KAFgB;kBAG7BH,OAAO,EAAEA,OAAO,CAACG,KAHY;kBAI7BF,WAAW,EAAEA,WAAW,CAACE;gBAJI,CAAD,CADf;;cAAA;gBACXC,GADW;gBAOjBP,SAAS,CAACM,KAAV,GAAkB,KAAlB;;gBACA,IAAIC,GAAJ,EAAS;kBACLX,OAAO,CAACY,IAAR,CAAa,aAAb,EAA4B;oBAAEC,QAAQ,EAAE;kBAAZ,CAA5B;gBACJ;;cAViB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAJ;;MAAA,gBAAXJ,YAAW;QAAA;MAAA;IAAA,GAAjB;;IAeA,OAAO;MAAEL,SAAS,EAATA,SAAF;MAAaD,QAAQ,EAARA,QAAb;MAAuBM,YAAY,EAAZA,YAAvB;MAAqCJ,KAAK,EAALA,KAArC;MAA4CC,MAAM,EAANA,MAA5C;MAAoDC,OAAO,EAAPA,OAApD;MAA6DC,WAAU,EAAVA;IAA7D,CAAP;EACJ;AA5BW,CAAf","names":["ref","useCollection","emits","setup","props","context","error","addTheDocument","wasAdded","isPending","title","course","modnumb","description","handleSubmit","value","res","emit","wasadded"],"sourceRoot":"","sources":["/Users/docfrawley/Sites/srsite/src/components/AddModule.vue"],"sourcesContent":["<template>\n    this is the add module form:\n    <form @submit.prevent=\"handleSubmit\">\n        <h4>Add Module Form</h4>\n        <label>Course</label><input type=\"text\" required placeholder=\"Course\" v-model=\"course\">\n        <label>Title</label><input type=\"text\" required placeholder=\"title\" v-model=\"title\">\n        <label>Module #</label><input type=\"text\" required placeholder=\"Module #\" v-model=\"modnumb\">\n        <label>Description</label><textarea required placeholder=\"Description\" v-model=\"description\"></textarea>\n        <!-- <div class=\"error\">{{ fileError }}</div> -->\n\n        <button v-if=\"!isPending\">ADD MODULE</button>\n        <button v-else disabled>Saving...</button>\n    </form>\n    <div v-if=\"wasAdded\">course added</div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useCollection from '@/composables/useCollection'\n\nexport default {\n    emits: ['moduleAdded'],\n    setup(props, context) {\n        const { error, addTheDocument } = useCollection('course-modules')\n        const wasAdded = ref(false)\n        const isPending = ref(false)\n        const title = ref()\n        const course = ref()\n        const modnumb = ref()\n        const description = ref()\n\n\n        const handleSubmit = async () => {\n            const res = await addTheDocument({\n                course: course.value,\n                title: title.value,\n                modnumb: modnumb.value,\n                description: description.value\n            })\n            isPending.value = false\n            if (res) {\n                context.emit('moduleAdded', { wasadded: true })\n            }\n\n        }\n\n\n        return { isPending, wasAdded, handleSubmit, title, course, modnumb, description }\n    }\n\n}\n</script>\n\n<style>\n.module-listing {\n    padding: 10px;\n    background-color: aquamarine;\n    cursor: pointer;\n    margin: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}