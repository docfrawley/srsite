{"ast":null,"code":"\"use strict\";\n\nvar _utils = require(\"./utils\");\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING ? {\n    object: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    },\n    callee: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    }\n  } : {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    async: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\n(0, _utils.default)(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n(0, _utils.default)(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"TopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});","map":{"version":3,"names":["_utils","require","default","visitor","aliases","fields","process","env","BABEL_TYPES_8_BREAKING","object","validate","Object","assign","oneOfNodeTypes","callee","assertNodeType","key","value","expression","builder","body","async","assertValueType","exported","properties","chain","assertEach","elements"],"sources":["/Users/docfrawley/Sites/NVoge/srsite/node_modules/@babel/types/lib/definitions/experimental.js"],"sourcesContent":["\"use strict\";\n\nvar _utils = require(\"./utils\");\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING ? {\n    object: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    },\n    callee: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    }\n  } : {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    async: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\n(0, _utils.default)(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n(0, _utils.default)(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"TopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}