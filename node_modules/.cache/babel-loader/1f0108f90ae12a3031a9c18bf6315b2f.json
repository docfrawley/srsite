{"ast":null,"code":"import _regeneratorRuntime from \"/Users/docfrawley/Sites/srsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/docfrawley/Sites/srsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref } from 'vue';\nimport useDocument from '@/composables/useDocument';\nimport getOrderDocs from '@/composables/getOrderDocs';\nimport ModuleForm from '@/components/ModuleForm.vue';\nexport default {\n  components: {\n    ModuleForm: ModuleForm\n  },\n  props: ['courseInfo'],\n  setup: function setup(props) {\n    var edCourse = ref(props.courseInfo);\n\n    var _useDocument = useDocument('courses', props.courseInfo.id),\n        isPending = _useDocument.isPending,\n        error = _useDocument.error,\n        deleteTheDoc = _useDocument.deleteTheDoc,\n        updateTheDoc = _useDocument.updateTheDoc;\n\n    var updated = ref(false);\n\n    var _getOrderDocs = getOrderDocs('course-modules', 'course', props.courseInfo.col_name),\n        documents = _getOrderDocs.documents;\n\n    var modToEdit = ref();\n    var componentKey = ref(0);\n    console.log(\" got to here: \", props.courseInfo);\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return updateTheDoc(edCourse.value);\n\n              case 2:\n                updated.value = true;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var showModule = function showModule(theMod) {\n      console.log(\" here now: \", theMod);\n      modToEdit.value = theMod;\n      componentKey.value++;\n    };\n\n    return {\n      isPending: isPending,\n      updated: updated,\n      edCourse: edCourse,\n      handleSubmit: handleSubmit,\n      showModule: showModule,\n      documents: documents,\n      modToEdit: modToEdit,\n      componentKey: componentKey\n    };\n  }\n};","map":{"version":3,"mappings":";;AAgCA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,eAAe;EACbC,UAAU,EAAE;IAAED,UAAS,EAATA;EAAF,CADC;EAEbE,KAAK,EAAE,CAAC,YAAD,CAFM;EAGbC,KAHa,iBAGPD,KAHO,EAGA;IACX,IAAME,QAAO,GAAIP,GAAG,CAACK,KAAK,CAACG,UAAP,CAApB;;IACA,mBAAyDP,WAAW,CAAC,SAAD,EAAYI,KAAK,CAACG,UAAN,CAAiBC,EAA7B,CAApE;IAAA,IAAQC,SAAR,gBAAQA,SAAR;IAAA,IAAmBC,KAAnB,gBAAmBA,KAAnB;IAAA,IAA0BC,YAA1B,gBAA0BA,YAA1B;IAAA,IAAwCC,YAAxC,gBAAwCA,YAAxC;;IACA,IAAMC,OAAO,GAACd,GAAG,CAAC,KAAD,CAAjB;;IACA,oBAAsBE,YAAY,CAAC,gBAAD,EAAmB,QAAnB,EAA6BG,KAAK,CAACG,UAAN,CAAiBO,QAA9C,CAAlC;IAAA,IAAQC,SAAR,iBAAQA,SAAR;;IACA,IAAMC,SAAQ,GAAIjB,GAAG,EAArB;IACA,IAAMkB,YAAY,GAAClB,GAAG,CAAC,CAAD,CAAtB;IAEAmB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bf,KAAK,CAACG,UAApC;;IAEA,IAAMa,YAAW;MAAA,sEAAI;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACbR,YAAY,CAACN,QAAQ,CAACe,KAAV,CADC;;cAAA;gBAEnBR,OAAO,CAACQ,KAAR,GAAc,IAAd;;cAFmB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAJ;;MAAA,gBAAXD,YAAW;QAAA;MAAA;IAAA,GAAjB;;IAKA,IAAME,UAAS,GAAK,SAAdA,UAAc,CAACC,MAAD,EAAY;MAC9BL,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,MAA3B;MACAP,SAAS,CAACK,KAAV,GAAkBE,MAAlB;MACAN,YAAY,CAACI,KAAb;IACF,CAJA;;IAOA,OAAO;MAACZ,SAAS,EAATA,SAAD;MAAYI,OAAO,EAAPA,OAAZ;MAAqBP,QAAQ,EAARA,QAArB;MAA+Bc,YAAY,EAAZA,YAA/B;MAA6CE,UAAU,EAAVA,UAA7C;MAAyDP,SAAS,EAATA,SAAzD;MAAoEC,SAAS,EAATA,SAApE;MAA+EC,YAAY,EAAZA;IAA/E,CAAP;EACF;AA1Ba,CAAf","names":["ref","useDocument","getOrderDocs","ModuleForm","components","props","setup","edCourse","courseInfo","id","isPending","error","deleteTheDoc","updateTheDoc","updated","col_name","documents","modToEdit","componentKey","console","log","handleSubmit","value","showModule","theMod"],"sourceRoot":"","sources":["/Users/docfrawley/Sites/srsite/src/components/CourseForm.vue"],"sourcesContent":["<template>\n  this is the course form:\n  <div v-if=\"edCourse\">\n    <form @submit.prevent=\"handleSubmit\">\n      <h4>Add/Edit Course</h4>\n      <label>Title</label><input type=\"text\" required placeholder=\"title\" v-model=\"edCourse.title\">\n      <label>Instructor</label><input type=\"text\" required placeholder=\"instructor\" v-model=\"edCourse.instructor\">\n      <label>Launch</label><input type=\"text\" required placeholder=\"launch\" v-model=\"edCourse.launch\">\n      <label>Status</label><input type=\"text\" required placeholder=\"status\" v-model=\"edCourse.status\">\n      <label>Col_Name</label><input type=\"text\" required placeholder=\"col_name\" v-model=\"edCourse.col_name\">\n      <label>Desscription</label><textarea required placeholder=\"description\" v-model=\"edCourse.description\"></textarea>\n      <!-- <div class=\"error\">{{ fileError }}</div> -->\n\n      <button v-if=\"!isPending\">UPDATE</button>\n      <button v-else disabled>Saving...</button>\n    </form>\n    <div v-if=\"updated\">course updated</div>\n  </div>\n  <div v-if=\"documents\" class=\"module-container\">\n    <div v-for=\"doc in documents\" :key=\"doc.id\">\n      <div class=\"module-listing\" @click=\"showModule(doc)\">{{doc.title}} </div>\n    </div>\n    <div>\n      ADD MODULE +\n    </div>\n  </div>\n  <div v-if=\"modToEdit\">\n    <ModuleForm :moduleInfo=\"currentModule\" :key=\"componentKey\"/>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useDocument from '@/composables/useDocument'\nimport getOrderDocs from '@/composables/getOrderDocs'\nimport ModuleForm from '@/components/ModuleForm.vue'\n\nexport default {\n  components: { ModuleForm },\n  props: ['courseInfo'],\n  setup(props) {\n    const edCourse = ref(props.courseInfo)\n    const { isPending, error, deleteTheDoc, updateTheDoc } = useDocument('courses', props.courseInfo.id)\n    const updated=ref(false)\n    const { documents } = getOrderDocs('course-modules', 'course', props.courseInfo.col_name)\n    const modToEdit = ref()\n    const componentKey=ref(0)\n    \n    console.log(\" got to here: \", props.courseInfo)\n\n    const handleSubmit = async () =>{\n      await updateTheDoc(edCourse.value)\n      updated.value=true\n    }\n\n    const showModule =  (theMod) => {\n      console.log(\" here now: \", theMod)\n      modToEdit.value = theMod\n      componentKey.value++\n    }\n\n\n    return {isPending, updated, edCourse, handleSubmit, showModule, documents, modToEdit, componentKey}\n  }\n\n}\n</script>\n\n<style>\n.module-listing {\n  padding: 10px;\n  background-color: aquamarine;\n  cursor: pointer;\n  margin: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}